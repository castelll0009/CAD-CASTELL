"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.single = exports.sequential = exports.reduce = exports.parallel = exports.mapRequestResolvers = exports.mapInputContext = exports.locally = exports.empty = void 0;
var _RequestBlock = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/blockedRequests.js"));
var core = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/core.js"));
var _dataSource = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./internal/dataSource.js"));
function _getRequireWildcardCache(e) {
  if ("function" != typeof WeakMap) return null;
  var r = new WeakMap(),
    t = new WeakMap();
  return (_getRequireWildcardCache = function (e) {
    return e ? t : r;
  })(e);
}
function _interopRequireWildcard(e, r) {
  if (!r && e && e.__esModule) return e;
  if (null === e || "object" != typeof e && "function" != typeof e) return {
    default: e
  };
  var t = _getRequireWildcardCache(r);
  if (t && t.has(e)) return t.get(e);
  var n = {
      __proto__: null
    },
    a = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
  }
  return n.default = e, t && t.set(e, n), n;
}
/**
 * @since 2.0.0
 * @category constructors
 */
const single = exports.single = _RequestBlock.single;
/**
 * @since 2.0.0
 * @category constructors
 */
const empty = exports.empty = _RequestBlock.empty;
/**
 * @since 2.0.0
 * @category constructors
 */
const mapRequestResolvers = exports.mapRequestResolvers = _RequestBlock.mapRequestResolvers;
/**
 * @since 2.0.0
 * @category constructors
 */
const parallel = exports.parallel = _RequestBlock.par;
/**
 * @since 2.0.0
 * @category constructors
 */
const reduce = exports.reduce = _RequestBlock.reduce;
/**
 * @since 2.0.0
 * @category constructors
 */
const sequential = exports.sequential = _RequestBlock.seq;
/**
 * Provides each data source with part of its required environment.
 *
 * @since 2.0.0
 * @category utils
 */
const mapInputContext = (self, f) => reduce(self, MapInputContextReducer(f));
exports.mapInputContext = mapInputContext;
const MapInputContextReducer = f => ({
  emptyCase: () => empty,
  parCase: (left, right) => parallel(left, right),
  seqCase: (left, right) => sequential(left, right),
  singleCase: (dataSource, blockedRequest) => single(_dataSource.mapInputContext(dataSource, f), blockedRequest)
});
/**
 * Provides each data source with a fiber ref value.
 *
 * @since 2.0.0
 * @category utils
 */
const locally = exports.locally = core.requestBlockLocally;
//# sourceMappingURL=RequestBlock.js.map